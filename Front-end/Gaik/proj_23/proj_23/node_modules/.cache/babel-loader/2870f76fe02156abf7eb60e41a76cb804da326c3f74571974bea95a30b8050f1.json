{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grisha\\\\Telran\\\\Front-end\\\\Gaik\\\\proj_23\\\\proj_23\\\\src\\\\components\\\\App\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport ToDoList from \"../ToDoList/ToDoList\";\nimport React, { useEffect, useState } from 'react';\nimport context from '../../context';\nimport PostList from \"../PostList/PostList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const List = [\n  //   {id: 1, title: 'поесть', done: 1},\n  //   {id: 2, title: 'позаниматься', done: 1},\n  //   {id: 3, title: 'погулять', done: 0},\n  //   {id: 4, title: 'встретиться с друзьями', done: 1},\n  //   {id: 5, title: 'поспать', done: 0}\n  // ];\n\n  const [todoList, setTodoList] = useState([]);\n\n  // useEffect(() =>{\n  //   fetch('https://jsonplaceholder.typicode.com/todos')\n  //   .then(resp => resp.json())\n  //   .then(data => setTodoList(data.map(({id, title, complited}) =>({id, title, done: completed}))))\n  // }, []);\n\n  //   console.log(todoList);\n\n  //   useEffect(() => {\n  //   (async () => {\n  //     const resp = await fetch('https://jsonplaceholder.typicode.com/todos');\n  //     const data = await resp.json();\n  //     const clearData = data.map(({id, title, completed}) => ({id, title, done: completed}));\n  //     setTodoList(clearData);\n  //   })();   \n  // }, []);\n\n  const remove = delId => setTodoList(todoList.filter(_ref => {\n    let {\n      id\n    } = _ref;\n    return id !== delId;\n  }));\n  const StatusDone = id => {\n    const newState = todoList.map(el => {\n      if (el.id === id) {\n        el.done = el.done === 1 ? 0 : 1;\n      }\n      return el;\n    });\n    setTodoList(newState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(context.Provider, {\n      value: {\n        todoList,\n        StatusDone,\n        remove\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8oII/eZSxfH0CVCrakPxQrDDmr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ToDoList","React","useEffect","useState","context","PostList","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","remove","delId","filter","_ref","id","StatusDone","newState","map","el","done","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Grisha/Telran/Front-end/Gaik/proj_23/proj_23/src/components/App/index.jsx"],"sourcesContent":["import ToDoList from \"../ToDoList/ToDoList\";\nimport React, { useEffect, useState } from 'react'\nimport context  from '../../context';\nimport PostList from \"../PostList/PostList\";\n\nfunction App() {\n\n  // const List = [\n  //   {id: 1, title: 'поесть', done: 1},\n  //   {id: 2, title: 'позаниматься', done: 1},\n  //   {id: 3, title: 'погулять', done: 0},\n  //   {id: 4, title: 'встретиться с друзьями', done: 1},\n  //   {id: 5, title: 'поспать', done: 0}\n  // ];\n  \n  const [todoList, setTodoList] = useState([]);\n\n  // useEffect(() =>{\n  //   fetch('https://jsonplaceholder.typicode.com/todos')\n  //   .then(resp => resp.json())\n  //   .then(data => setTodoList(data.map(({id, title, complited}) =>({id, title, done: completed}))))\n  // }, []);\n\n//   console.log(todoList);\n\n//   useEffect(() => {\n//   (async () => {\n//     const resp = await fetch('https://jsonplaceholder.typicode.com/todos');\n//     const data = await resp.json();\n//     const clearData = data.map(({id, title, completed}) => ({id, title, done: completed}));\n//     setTodoList(clearData);\n//   })();   \n// }, []);\n\n\n\n  \n  const remove = (delId) => setTodoList(todoList.filter(({id}) => id !== delId));\n  \n  const StatusDone = (id) => {\n    const newState = todoList.map(el => {\n        if(el.id === id){\n        el.done = el.done === 1 ? 0 : 1;\n        }\n        return el\n    })\n    setTodoList(newState);\n  }\n\n  return (\n    <div>\n      <context.Provider value={{todoList, StatusDone, remove}}>\n        <ToDoList/>\n        <PostList/>\n      </context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAO,eAAe;AACpC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA;EACA;EACA;EACA;;EAEF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAKE,MAAMS,MAAM,GAAIC,KAAK,IAAKF,WAAW,CAACD,QAAQ,CAACI,MAAM,CAACC,IAAA;IAAA,IAAC;MAACC;IAAE,CAAC,GAAAD,IAAA;IAAA,OAAKC,EAAE,KAAKH,KAAK;EAAA,EAAC,CAAC;EAE9E,MAAMI,UAAU,GAAID,EAAE,IAAK;IACzB,MAAME,QAAQ,GAAGR,QAAQ,CAACS,GAAG,CAACC,EAAE,IAAI;MAChC,IAAGA,EAAE,CAACJ,EAAE,KAAKA,EAAE,EAAC;QAChBI,EAAE,CAACC,IAAI,GAAGD,EAAE,CAACC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;MAC/B;MACA,OAAOD,EAAE;IACb,CAAC,CAAC;IACFT,WAAW,CAACO,QAAQ,CAAC;EACvB,CAAC;EAED,oBACEX,OAAA;IAAAe,QAAA,eACEf,OAAA,CAACH,OAAO,CAACmB,QAAQ;MAACC,KAAK,EAAE;QAACd,QAAQ;QAAEO,UAAU;QAAEL;MAAM,CAAE;MAAAU,QAAA,gBACtDf,OAAA,CAACP,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACXrB,OAAA,CAACF,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV;AAACnB,EAAA,CApDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}