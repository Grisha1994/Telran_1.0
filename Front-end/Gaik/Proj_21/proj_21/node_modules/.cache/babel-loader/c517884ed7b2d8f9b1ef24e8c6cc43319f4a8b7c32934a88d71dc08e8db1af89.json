{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grisha\\\\Telran\\\\Front-end\\\\Gaik\\\\Proj_21\\\\proj_21\\\\src\\\\components\\\\App\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport Product from \"../Product/Product\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction App() {\n  _s();\n  const products = [{\n    id: 1,\n    title: 'велосипед',\n    price: 3500,\n    count: 12\n  }, {\n    id: 2,\n    title: 'ролики',\n    price: 500,\n    count: 15\n  }, {\n    id: 3,\n    title: 'самокат',\n    price: 700,\n    count: 0\n  }, {\n    id: 4,\n    title: 'лыжи',\n    price: 2200,\n    count: 8\n  }];\n  const [List, setTodoList] = useState(products);\n  const deleteStatus = deleteId => setTodoList(List.filter(_ref => {\n    let {\n      id\n    } = _ref;\n    return id !== deleteId;\n  }));\n  const plus = id => {\n    const newArr = List.map(el => {\n      if (el.id === id) {\n        el.count++;\n      }\n      return el;\n    });\n    setTodoList(newArr);\n  };\n  const minus = id => {\n    const newArr = List.map(el => {\n      if (el.id === id && el.count !== 0) {\n        el.count--;\n      }\n      return el;\n    });\n    setTodoList(newArr);\n  };\n  const reset = id => {\n    const newArr = List.map(el => {\n      if (el.id === id) {\n        el.count = 0;\n      }\n      return el;\n    });\n    setTodoList(newArr);\n  };\n  const plus1000 = id => {\n    const newArr = List.map(el => {\n      if (el.id === id) {\n        el.price + 1000;\n      }\n      return el;\n    });\n    setTodoList(newArr);\n  };\n  // в компоненте App сформировать параграфы с описанием продуктов\n  /* \r\n  <p>велосипед (3500)</p>\r\n  <p>велосипед (3500)</p>\r\n  <p>велосипед (3500)</p> \r\n    1) добавить у каждой карточки кнопку увеличения цены на 1000\r\n    */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: List.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0442\\u043E\\u0432\\u0430\\u0440 \\u043E\\u0442\\u0441\\u0441\\u0442\\u0443\\u0435\\u0442\\u0443\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }, this) : List.map(el => /*#__PURE__*/_createElement(Product, {\n      ...el,\n      key: el.id,\n      deleteStatus,\n      plus,\n      minus,\n      reset,\n      plus1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 70\n      }\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"DuOH1yyrPwfvte4RKe5loFqjxsw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Product","useState","jsxDEV","_jsxDEV","createElement","_createElement","App","_s","products","id","title","price","count","List","setTodoList","deleteStatus","deleteId","filter","_ref","plus","newArr","map","el","minus","reset","plus1000","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","key","__self","__source","_c","$RefreshReg$"],"sources":["C:/Users/Grisha/Telran/Front-end/Gaik/Proj_21/proj_21/src/components/App/index.jsx"],"sourcesContent":["import Product from \"../Product/Product\";\r\nimport { useState } from 'react'\r\n\r\nfunction App() {\r\n\r\n    const products = [\r\n        {id: 1, title: 'велосипед', price: 3500, count: 12},\r\n        {id: 2, title: 'ролики', price: 500, count: 15},\r\n        {id: 3, title: 'самокат', price: 700, count: 0},\r\n        {id: 4, title: 'лыжи', price: 2200, count: 8},\r\n      ]\r\n      \r\n      const [List, setTodoList] = useState(products);\r\n\r\n      const deleteStatus = (deleteId) => setTodoList(List.filter(({id}) => id !== deleteId));\r\n\r\n      const plus = (id) => {\r\n       const newArr = List.map((el) => {\r\n            if (el.id === id){\r\n                el.count++\r\n            }\r\n            return el\r\n        })\r\n        setTodoList(newArr)\r\n      }\r\n\r\n      const minus = (id) => {\r\n        const newArr = List.map((el) => {\r\n             if (el.id === id && el.count !== 0){\r\n                el.count--\r\n             }\r\n             return el\r\n         })\r\n         setTodoList(newArr)\r\n       }\r\n        \r\n       const reset = (id) => {\r\n        const newArr = List.map((el) => {\r\n             if (el.id === id){\r\n                el.count = 0\r\n             }\r\n             return el\r\n         })\r\n         setTodoList(newArr)\r\n       }\r\n\r\n       const plus1000 = (id) => {\r\n        const newArr = List.map((el) => {\r\n             if (el.id === id){\r\n              el.price + 1000\r\n             }\r\n             return el\r\n         })\r\n         setTodoList(newArr)\r\n       }\r\n    // в компоненте App сформировать параграфы с описанием продуктов\r\n    /* \r\n    <p>велосипед (3500)</p>\r\n    <p>велосипед (3500)</p>\r\n    <p>велосипед (3500)</p> \r\n\r\n    1) добавить у каждой карточки кнопку увеличения цены на 1000\r\n\r\n    */\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        {\r\n        List.length === 0 ? <p>товар отсстуетут</p> : List.map(el => <Product {...el} key={el.id} {...{deleteStatus, plus, minus, reset, plus1000}}/>)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default App;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAMC,QAAQ,GAAG,CACb;IAACC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACnD;IAACH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC/C;IAACH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAC,CAAC,EAC/C;IAACH,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAC,CAAC,CAC9C;EAED,MAAM,CAACC,IAAI,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACO,QAAQ,CAAC;EAE9C,MAAMO,YAAY,GAAIC,QAAQ,IAAKF,WAAW,CAACD,IAAI,CAACI,MAAM,CAACC,IAAA;IAAA,IAAC;MAACT;IAAE,CAAC,GAAAS,IAAA;IAAA,OAAKT,EAAE,KAAKO,QAAQ;EAAA,EAAC,CAAC;EAEtF,MAAMG,IAAI,GAAIV,EAAE,IAAK;IACpB,MAAMW,MAAM,GAAGP,IAAI,CAACQ,GAAG,CAAEC,EAAE,IAAK;MAC3B,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,EAAC;QACba,EAAE,CAACV,KAAK,EAAE;MACd;MACA,OAAOU,EAAE;IACb,CAAC,CAAC;IACFR,WAAW,CAACM,MAAM,CAAC;EACrB,CAAC;EAED,MAAMG,KAAK,GAAId,EAAE,IAAK;IACpB,MAAMW,MAAM,GAAGP,IAAI,CAACQ,GAAG,CAAEC,EAAE,IAAK;MAC3B,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,IAAIa,EAAE,CAACV,KAAK,KAAK,CAAC,EAAC;QAChCU,EAAE,CAACV,KAAK,EAAE;MACb;MACA,OAAOU,EAAE;IACb,CAAC,CAAC;IACFR,WAAW,CAACM,MAAM,CAAC;EACrB,CAAC;EAED,MAAMI,KAAK,GAAIf,EAAE,IAAK;IACrB,MAAMW,MAAM,GAAGP,IAAI,CAACQ,GAAG,CAAEC,EAAE,IAAK;MAC3B,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,EAAC;QACda,EAAE,CAACV,KAAK,GAAG,CAAC;MACf;MACA,OAAOU,EAAE;IACb,CAAC,CAAC;IACFR,WAAW,CAACM,MAAM,CAAC;EACrB,CAAC;EAED,MAAMK,QAAQ,GAAIhB,EAAE,IAAK;IACxB,MAAMW,MAAM,GAAGP,IAAI,CAACQ,GAAG,CAAEC,EAAE,IAAK;MAC3B,IAAIA,EAAE,CAACb,EAAE,KAAKA,EAAE,EAAC;QAChBa,EAAE,CAACX,KAAK,GAAG,IAAI;MAChB;MACA,OAAOW,EAAE;IACb,CAAC,CAAC;IACFR,WAAW,CAACM,MAAM,CAAC;EACrB,CAAC;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;;EAII,oBACEjB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAElBd,IAAI,CAACe,MAAM,KAAK,CAAC,gBAAGzB,OAAA;MAAAwB,QAAA,EAAG;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,GAAGnB,IAAI,CAACQ,GAAG,CAACC,EAAE,iBAAIjB,cAAA,CAACL,OAAO;MAAA,GAAKsB,EAAE;MAAEW,GAAG,EAAEX,EAAE,CAACb,EAAG;MAAMM,YAAY;MAAEI,IAAI;MAAEI,KAAK;MAAEC,KAAK;MAAEC,QAAQ;MAAAS,MAAA;MAAAC,QAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE1I;AAEV;AAACzB,EAAA,CArEMD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAuEV,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}