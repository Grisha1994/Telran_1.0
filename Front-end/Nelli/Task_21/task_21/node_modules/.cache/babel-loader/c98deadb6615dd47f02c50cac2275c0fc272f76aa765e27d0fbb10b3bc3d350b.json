{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grisha\\\\Telran\\\\Front-end\\\\Nelli\\\\Task_21\\\\task_21\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { posts } from '../src/data/posts.js';\nimport PostContainer from './components/PostContainer/PostContainer.jsx';\nimport { Context } from './contex.js';\nimport AddPost from './components/AddPost/AddPost.jsx';\nimport { comments } from './components/Post/Comment/Comment.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(_ref) {\n  _s();\n  let {\n    comments\n  } = _ref;\n  const [cardsPosts, setCardsPosts] = useState(posts);\n  const switch_like = id => {\n    const target_post = cardsPosts.find(el => el.id === id);\n    target_post.like = !target_post.like;\n    setCardsPosts([...cardsPosts]);\n  };\n  const addPostCard = post => {\n    const newState = [...cardsPosts, post];\n    setCardsPosts(newState);\n    console.log(newState);\n  };\n  const [cardsComments, setCardsComments] = useState(comments);\n  const addCommentCard = comment => {\n    const newStateComment = [...cardsComments, comment];\n    setCardsComments(newStateComment);\n    console.log(newStateComment);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddPost, {\n      addPostCard: addPostCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        cardsPosts,\n        switch_like,\n        addCommentCard\n      },\n      children: /*#__PURE__*/_jsxDEV(PostContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nt4cdtx8WXSMBLfwQKpYY6n4Bcw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","posts","PostContainer","Context","AddPost","comments","jsxDEV","_jsxDEV","App","_ref","_s","cardsPosts","setCardsPosts","switch_like","id","target_post","find","el","like","addPostCard","post","newState","console","log","cardsComments","setCardsComments","addCommentCard","comment","newStateComment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/Grisha/Telran/Front-end/Nelli/Task_21/task_21/src/App.js"],"sourcesContent":["import { useState } from 'react'\nimport { posts } from '../src/data/posts.js'\nimport PostContainer from './components/PostContainer/PostContainer.jsx';\nimport { Context } from './contex.js';\nimport AddPost from './components/AddPost/AddPost.jsx';\nimport {comments} from './components/Post/Comment/Comment.jsx'\n\nfunction App({comments}) {\n\n  const [cardsPosts, setCardsPosts] = useState(posts);\n\n  const switch_like = id => {\n    const target_post = cardsPosts.find(el => el.id === id);\n    target_post.like = !target_post.like;\n    setCardsPosts([...cardsPosts]);\n  }\n\n\n  const addPostCard = (post) => {\n    const newState = [...cardsPosts, post];\n    setCardsPosts(newState)\n    console.log(newState);\n  }\n\n  const [cardsComments, setCardsComments] = useState(comments);\n\n  const addCommentCard = (comment) => {\n    const newStateComment = [...cardsComments, comment];\n    setCardsComments(newStateComment)\n    console.log(newStateComment);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <AddPost addPostCard={addPostCard}/>\n      <Context.Provider value={{cardsPosts, switch_like, addCommentCard}}>\n        <PostContainer/>\n      </Context.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,OAAOC,aAAa,MAAM,8CAA8C;AACxE,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAAQC,QAAQ,QAAO,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACL;EAAQ,CAAC,GAAAI,IAAA;EAErB,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACC,KAAK,CAAC;EAEnD,MAAMY,WAAW,GAAGC,EAAE,IAAI;IACxB,MAAMC,WAAW,GAAGJ,UAAU,CAACK,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACH,EAAE,KAAKA,EAAE,CAAC;IACvDC,WAAW,CAACG,IAAI,GAAG,CAACH,WAAW,CAACG,IAAI;IACpCN,aAAa,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC;EAChC,CAAC;EAGD,MAAMQ,WAAW,GAAIC,IAAI,IAAK;IAC5B,MAAMC,QAAQ,GAAG,CAAC,GAAGV,UAAU,EAAES,IAAI,CAAC;IACtCR,aAAa,CAACS,QAAQ,CAAC;IACvBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACvB,CAAC;EAED,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAACK,QAAQ,CAAC;EAE5D,MAAMqB,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMC,eAAe,GAAG,CAAC,GAAGJ,aAAa,EAAEG,OAAO,CAAC;IACnDF,gBAAgB,CAACG,eAAe,CAAC;IACjCN,OAAO,CAACC,GAAG,CAACK,eAAe,CAAC;EAC9B,CAAC;EAGD,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACH,OAAO;MAACe,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpC3B,OAAA,CAACJ,OAAO,CAACgC,QAAQ;MAACC,KAAK,EAAE;QAACzB,UAAU;QAAEE,WAAW;QAAEa;MAAc,CAAE;MAAAI,QAAA,eACjEvB,OAAA,CAACL,aAAa;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV;AAACxB,EAAA,CAlCQF,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}